%==========================================================================
%Given a list of niftis generated by generateRandomNiftis, select a subset
%of them in a biased manor.
%
%Authors: Thomas Maullin
%==========================================================================

function struct = biasSelect(CElist, CSElist, XYZ)
    
    valueArray = [];
    valueSEArray = [];
    for i = 1:length(CElist)
        
        vol       = spm_vol(CElist{i});
        
        img1 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3)-1)]),vol.dim(1:2),0);
        img2 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3))]),vol.dim(1:2),0);
        img3 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3)+1)]),vol.dim(1:2),0);
        
        if mean(~isnan(spm_read_vols(vol))) > 50
            disp('active')
            img1=img1./100;
            img2=img2./100;
            img3=img3./100;
        end
        
        obsVal = [img1((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1)),...
                  img2((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1)),...
                  img3((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1))];
        
        valueArray(i) = mean(mean(obsVal));
        
        vol       = spm_vol(CSElist{i});
        
        img1 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3)-1)]),vol.dim(1:2),0);
        img2 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3))]),vol.dim(1:2),0);
        img3 = spm_slice_vol(vol,spm_matrix([0 0 (XYZ(3)+1)]),vol.dim(1:2),0);
              
        if mean(~isnan(spm_read_vols(vol))) > 100
            disp('active2')
            img1=img1./100;
            img2=img2./100;
            img3=img3./100;
        end
        
        obsVal = [img1((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1)),...
        img2((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1)),...
        img3((XYZ(1)-1):(XYZ(1)+1), (XYZ(2)-1):(XYZ(2)+1))];
        
        valueSEArray(i) = mean(mean(obsVal));
        
    end
        
    [output1, ranks] = sort(valueArray);
    output2 = valueSEArray(ranks);
    struct = {output1, output2};
    
end